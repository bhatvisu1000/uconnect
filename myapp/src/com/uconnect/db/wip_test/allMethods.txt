    findOne
    findAllForAPage
    insertOne
    insertAll
    updateOne
    updateAll
    deleteOne
    deleteAll

    *** above are only methods we need and coll and db name is dynamically populated
    When it encounters an assert statement, Python evaluates the accompanying expression, which is hopefully true. If the expression is false, Python raises an AssertionError exception.

    The syntax for assert is âˆ’
    assert Expression[, Arguments]

Dynamicaly import the class

from pydoc import locate
my_class = locate('my_package.my_module.MyClass')



app.py
    process_request("screenid","actionid")

{
  "ScreenId": "MSCR001",
  "ActionId": "Action001",
  "BoClass": "MemberBO",
  "BOMethod": "CreateAMember",
  "DBCall": [
    {
      "seq": 0,
      "DbClass": "MongoDB",
      "dbMethod": "insertOne",
      "DbParam": {
        "coll": "Member"
      }
    }
  ]
}

after write: Call get last error and set the write concern as majority

All userdefined exceptins must be extending from super class ucException which is extending defualt exception

Exceptions:
    Attributes:
        ErrorCode:
        ErrorText
        ModuleEncuntered Exception
    Types:
        System
        User Defined
            Bsuiness
            DB

DBClass
    FindOne
    FindManywithPaging
    DeleteOne
    DeleteMany
    UpdateOne
    UpdateMany
BO Class
    Find
        <criteria>, <projection>
    Create
    Update
    Remove